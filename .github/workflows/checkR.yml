name: Building Faster R CI

on:
  workflow_dispatch:
  #   inputs:
  #     extra-packages:
  #       description: 'Any extra packages to install outside of the packages listed in the dependencies'
  #     needs:
  #       description: 'Any extra Config/Needs fields which need to be included when installing dependencies'
  #     packages:
  #       description: 'Which package(s) to install.'
  #       default: 'deps::., any::sessioninfo'
  #     pak-version:
  #       description: 'Which pak version to use. Possible values are "stable", "rc" and "devel".'
  #       default: 'stable'
  #     working-directory:
  #       description: 'Using the working-directory keyword, you can specify the working directory of where "pkg_deps" command searches for dependencies in the "DESCRIPTION" file.'
  #       default: '.'
  #     dependencies:
  #       description: 'Types of dependencies to install. Must be an R expression. Note that it often needs to be quoted in YAML, see the README for details.'
  #       default: '"all"'
  #     upgrade:
  #       description: 'Whether to install the latest available versions of the dependencies. Must be an R expression. See the README for details if you need quoting.'
  #       default: 'FALSE'
  push:
    branches:
      - "R-test"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    container: bahadzie/alpine-r:4.3.0
    steps:
      - name: Checkout repos
        uses: actions/checkout@v4

      # - name: Temp Fix. https://github.com/peter-evans/create-pull-request/issues/1170
      #   run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        

      - name: Compile the readme
        run: |
          writeLines(
            knitr::knit_expand(
              "README.Rmd",
              packagename = read.dcf("DESCRIPTION", "Package"),
              institution = read.dcf("DESCRIPTION", "Config/Institution"),
              department = read.dcf("DESCRIPTION", "Config/Department"),
              department_url = read.dcf("DESCRIPTION", "Config/DepartmentURL"),
              recon = read.dcf("DESCRIPTION", "Config/Recon"),
              recon_description = read.dcf("DESCRIPTION", "Config/ReconDescription"),
              gh_repo = Sys.getenv("GITHUB_REPOSITORY")
            ),
            "README_expanded.Rmd"
          )
          rmarkdown::render(
            "README_expanded.Rmd",
            output_file = "README.md",
            output_dir = "."
          )
        shell: Rscript {0}

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          # Also add README figures if they exist
          if [ -d man/figures ]
          then
            git add man/figures/
          fi
          git diff-index --quiet HEAD || git commit -m "Automatic readme update"
          git push origin R-test || echo "No changes to push"




    # steps:
    #   -
    #     name: Checkout
    #     uses: actions/checkout@v3
    #   -
    #     name: Login to Docker Hub
    #     uses: docker/login-action@v2
    #     with:
    #       username: ${{ secrets.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}
    #   -
    #     name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v2
    #   -
    #     name: Build and push
    #     uses: docker/build-push-action@v4
    #     with:
    #       context: .
    #       file: ./Dockerfile
    #       push: true
    #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/alpine-r-pandoc:4.3.0


# name: ðŸŽ¨ Test Visual Regression

# on: workflow_call

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     container: drizzt99/vonage:1.2.0
#     steps:
#       - run: echo "Running 1.2.0"

#       - uses: actions/checkout@v3

#       - uses: actions/setup-node@v3
#         with:
#           node-version: '16'
#           cache: 'npm'

#       - run: apt-get install tar -y

#       - uses: actions/cache@v3
#         id: cache
#         with:
#           path: node_modules/
#           key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

#       - name: Install Dependencies
#         if: steps.cache.outputs.cache-hit != 'true'
#         run: npm ci

#       - run: npm run nx e2e components -- --task=local
#       - uses: actions/upload-artifact@v3
#         with:
#           name: visual-regression-artifact
#           path: test-results/